// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimonsVoss.LSM.DB;

#nullable disable

namespace SimonsVoss.LSM.DB.Migrations
{
    [DbContext(typeof(EfContext))]
    [Migration("20220627093023_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimonsVoss.LSM.Core.Entities.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_in(md5(random()::text || clock_timestamp()::text)::cstring)");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("ShortCut")
                        .HasColumnType("text")
                        .HasColumnName("short_cut");

                    b.HasKey("Id")
                        .HasName("pk_buildings");

                    b.ToTable("buildings", "public");
                });

            modelBuilder.Entity("SimonsVoss.LSM.Core.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_in(md5(random()::text || clock_timestamp()::text)::cstring)");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_groups");

                    b.ToTable("groups", "public");
                });

            modelBuilder.Entity("SimonsVoss.LSM.Core.Entities.Lock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_in(md5(random()::text || clock_timestamp()::text)::cstring)");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uuid")
                        .HasColumnName("building_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Floor")
                        .HasColumnType("text")
                        .HasColumnName("floor");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("text")
                        .HasColumnName("room_number");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text")
                        .HasColumnName("serial_number");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_locks");

                    b.HasIndex("BuildingId")
                        .HasDatabaseName("ix_locks_building_id");

                    b.ToTable("locks", "public");
                });

            modelBuilder.Entity("SimonsVoss.LSM.Core.Entities.Medium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_in(md5(random()::text || clock_timestamp()::text)::cstring)");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid")
                        .HasColumnName("group_id");

                    b.Property<string>("Owner")
                        .HasColumnType("text")
                        .HasColumnName("owner");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text")
                        .HasColumnName("serial_number");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_media");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("ix_media_group_id");

                    b.ToTable("media", "public");
                });

            modelBuilder.Entity("SimonsVoss.LSM.Core.Entities.Lock", b =>
                {
                    b.HasOne("SimonsVoss.LSM.Core.Entities.Building", "Building")
                        .WithMany("Locks")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_locks_buildings_building_id");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("SimonsVoss.LSM.Core.Entities.Medium", b =>
                {
                    b.HasOne("SimonsVoss.LSM.Core.Entities.Group", "Group")
                        .WithMany("Media")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_media_groups_group_id");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("SimonsVoss.LSM.Core.Entities.Building", b =>
                {
                    b.Navigation("Locks");
                });

            modelBuilder.Entity("SimonsVoss.LSM.Core.Entities.Group", b =>
                {
                    b.Navigation("Media");
                });
#pragma warning restore 612, 618
        }
    }
}
